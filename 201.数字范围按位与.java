/*
 * @lc app=leetcode.cn id=201 lang=java
 *
 * [201] 数字范围按位与
 */

// @lc code=start
class Solution {
    public int rangeBitwiseAnd(int left, int right) {
        // 对于连续的数字，它们按位与后还是 1 的位置肯定是它们左边公共的前缀
        // 比如 1011 和 1100, 1100 和 1101，这两组连续数字，按位与就是取公共前缀
        // 后续的位置取 0
        // 证明思路：对于 m 到 n 之间的连续数字，假设从左往右第一个不同位记为第 i 位
        // 那么第 i 位上，一定是前半部分数字在这位是 0，后半部分数字在这位上是 1
        // 那么必然会有两个连续数字，在第 i 位及以后是 0111.. 和 1000... 这样的形式，
        // 这两个数字按位与之后，就是 i 及以后的位都是 0 了
        // 那么题目就变为寻找这些数字的公共前缀
        // 还可以进一步变为是寻找 m 及 n 这两个数字的公共前缀，因为它们的公共前缀是最短的，
        // 也就是所有数字的公共前缀

        // 简单的方法是，m 和 n 同时右位移，直到两个数相等，就是公共前缀
        // 另一种方法是 lc191 里的去除 n 末尾的 1，直到它小于等于 m，此时n 就是公共前缀

        while (left < right) {
            right = right & (right - 1);
        }

        return right;
    }
}
// @lc code=end

