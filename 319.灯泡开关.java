/*
 * @lc app=leetcode.cn id=319 lang=java
 *
 * [319] 灯泡开关
 */

// @lc code=start
class Solution {

    // 灯的初始状态是灭，如果最后要变成亮，应当被按奇数次
    // 对于一个数字n，它的因子至少是1和它本身n，
    // 如果它还有另外的因子，也就是i*j=n，那么i和j就是成对出现的
    // 也就是说它的因子是成对的，每当有一个因子i，就对应有一个因子j使得i*j=n
    // 那么第n个灯泡，就会在它所有的【第因子次】被拨动开关
    // 因为因子成对出现，所以会被波动偶数次
    // 但是如果n是平方数，那么就有i*i=n，这样对于因子i就只会被拨动这一次，
    // 而没有跟它对应的另一个数来把它拨回来
    // 由此可知，只有平方数的灯泡会被拨动奇数次，最终是开灯的
    // 也就是第1,4,9,16个是开灯
    // 此题转变为计算n之前有多少个平方数
    // 也即是对n求平方根后向下取整
    public int bulbSwitch(int n) {
        return (int) Math.sqrt(n);
    }
}
// @lc code=end

