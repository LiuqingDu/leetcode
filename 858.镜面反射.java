/*
 * @lc app=leetcode.cn id=858 lang=java
 *
 * [858] 镜面反射
 */

// @lc code=start
class Solution {
    public int mirrorReflection(int p, int q) {
        // 把这个弹射看成一对在无限高的墙上弹射
        // 实际上它在顶部的弹射(向左下或者右下反弹)的过程可以看作是:顶面是个玻璃,
        // 穿过顶面继续向上,上面是另一个正方形房间,它继续向这个房间的左右墙射去
        // 比如从左墙向顶墙射去,在顶墙反弹去右墙
        // 相当于在顶墙穿过去,继续向右墙射
        // 注意到每一次弹射,都相当于向上移动 q
        // 把左右两面墙向上无限延伸, 那么左边墙相当于依次是 (发射点,2,发射点,2...)
        // 右边墙相当于依次是 (0,1,0,1...)
        // 这道题实际上变换为: 在一个无限高的通道里,每次弹射是向上前进q
        // 当弹射n次后,刚好在某一个接收器上,也就是 n*q 是 p 的倍数
        // 此时如果弹射了偶数次,那么就是落在左边,此时有可能落在发射点也可能落在2
        // 由于题目保证肯定落在接收器,那么就只能是2
        // 如果弹射了奇数次,那么就是落在右边,此时有可能落在0也可能落在1
        // 此时需要判断 n*q 是 p 的奇数倍还是偶数倍
        // 如果是奇数倍,那么就是落在1,如果是偶数倍,那么就是落在0
        
        // 遍历尝试看弹射多少次后刚好落在接收器上
        for (int n = 1;; n++) {
            int x = n * q;
            // 整数倍就是落在接收器上
            if (x % p == 0) {
                // 落在接收器上
                if (n % 2 == 0) {
                    // 偶数次弹射,落在左边
                    return 2;
                } else {
                    // 奇数次弹射,落在右边
                    return (x / p) % 2 == 0 ? 0 : 1;
                }
            }
        }
    }
}
// @lc code=end

